<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5oK/ABtVbdL89950AAAAAElFTkSuQmCC
</value>
  </data>
</root>